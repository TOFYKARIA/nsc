import os
import json
import requests
from vk_api import VkApi
from vk_api.longpoll import VkLongPoll, VkEventType
import random

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
TOKENS_FILE = 'tokens.txt'
OWNER_ID = '732069034'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à ID –≤–ª–∞–¥–µ–ª—å—Ü–∞
OWNER_TOKEN = 'https://oauth.vk.com/blank.html#access_token=vk1.a.uSDdPminkmyd-T3KJYgECmQ7BNpQayYmx9jQvo6eToenL8YWbZ5hKgW7WvYCA7fn-WcwGtSa8knUHyRF00fqNCo4geFB7PStQPs1w79QdtkfkDpnoS6enGhwCftoO4VaS9lk_89EG7z_vKw4Xzyvb52CM7-vZbLmKj4GTZx5qc0NgUUGCn37uIyHI3Uc5A72dMpQGIzF2fCaq-50YgUN7A&expires_in=0&user_id=732069034&email=Miron.plane@gmail.com'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –≤–ª–∞–¥–µ–ª—å—Ü–∞

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞
def load_tokens():
    if os.path.exists(TOKENS_FILE):
        with open(TOKENS_FILE, 'r') as file:
            return json.load(file)
    return {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤ –≤ —Ñ–∞–π–ª
def save_tokens(tokens):
    with open(TOKENS_FILE, 'w') as file:
        json.dump(tokens, file)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞
def register_token(user_id, token):
    tokens = load_tokens()
    if user_id in tokens:
        return "‚ùå –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã."
    tokens[user_id] = token
    save_tokens(tokens)
    return "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å!"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
def unregister_token(user_id):
    tokens = load_tokens()
    if user_id not in tokens:
        return "‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã."
    del tokens[user_id]
    save_tokens(tokens)
    return "‚úÖ –í–∞—à —Ç–æ–∫–µ–Ω —É–¥–∞–ª–µ–Ω. –í—ã –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
def show_stats():
    tokens = load_tokens()
    stats = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n"
    for user_id, token in tokens.items():
        stats += f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_id}, –¢–æ–∫–µ–Ω: {token}\n"
    return stats if tokens else "‚ùå –ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è VK API
vk_session = VkApi(token=OWNER_TOKEN)  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å —Ç–æ–∫–µ–Ω–æ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞
vk = vk_session.get_api()

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
def handle_commands(event):
    user_id = event.user_id
    message = event.text.lower()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞
    if user_id == OWNER_ID:
        # –ö–æ–º–∞–Ω–¥—ã –≤–ª–∞–¥–µ–ª—å—Ü–∞
        if message.startswith('/—Å—Ç–∞—Ç–∞'):
            return show_stats()
        if message.startswith('/—Ä–µ–≥'):
            return "‚ùå –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."
        if message.startswith('/–∞–Ω—Ä–µ–≥'):
            return "‚ùå –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç —É–¥–∞–ª—è—Ç—å —Ç–æ–∫–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."

        if message.startswith('/disable'):
            return "‚úÖ –ë–æ—Ç –æ—Ç–∫–ª—é—á–µ–Ω –¥–ª—è –æ–±—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è."
        
        if message.startswith('/copy'):
            return "‚ùå –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."

        if message.startswith('/ban'):
            return "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω."

        if message.startswith('/ban_chat'):
            return "‚úÖ –ë–µ—Å–µ–¥–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞."
        
        if message.startswith('/uid') or message.startswith('/userid'):
            return f"üë§ –í–∞—à ID: {user_id}"

        # –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤–ª–∞–¥–µ–ª—å—Ü–∞
        return "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞."
    
    # –û–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    if message.startswith('/—Ä–µ–≥'):
        token = message.split()[1] if len(message.split()) > 1 else ''
        if not token:
            return "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω."
        return register_token(user_id, token)

    if message.startswith('/–∞–Ω—Ä–µ–≥'):
        return "‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω, —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å."
    
    # –û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if message.startswith('/911') or message.startswith('/112') or message.startswith('/help'):
        return "üí¨ –ö–æ–º–∞–Ω–¥—ã:\n/911, /112, /help - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–∞–º\n/del - —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ\n/disable - –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞\n/copy - –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ\n/ban - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"

    if message.startswith('/del'):
        # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–∞–ø—Ä–∏–º–µ—Ä, —É–¥–∞–ª–∏—Ç—å 5 —Å–æ–æ–±—â–µ–Ω–∏–π
        parts = message.split()
        try:
            count = int(parts[1])
            delete_content = parts[2] if len(parts) > 2 else 'no'
            return f"‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {count}, –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {delete_content}"
        except:
            return "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ü—Ä–∏–º–µ—Ä: /del 5 yes"

    if message.startswith('/repeat'):
        try:
            count = int(message.split()[1])
            text = " ".join(message.split()[2:])
            return f"üì¢ –ü–æ–≤—Ç–æ—Ä—è—é: {text} ({count} —Ä–∞–∑)"
        except:
            return "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ü—Ä–∏–º–µ—Ä: /repeat 3 –ü—Ä–∏–≤–µ—Ç"

    if message.startswith("/ping"):
        return "üèì –ü–æ–Ω–≥!"
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥—Ä—É–≥–∏—Ö –∫–æ–º–∞–Ω–¥
    elif message.startswith('/d') or message.startswith('/dist'):
        return "‚ùå –ñ–º—ã—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫."

    elif message.startswith('/sa') or message.startswith('/save_audio'):
        return "‚úÖ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ."

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏
    elif message.startswith('/assoc'):
        return "üìã –°–ø–∏—Å–æ–∫ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–π."

    elif message.startswith('/assoc_set'):
        return "‚úÖ –ê—Å—Å–æ—Ü–∏–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞."

    elif message.startswith('/assoc_del'):
        return "‚úÖ –ê—Å—Å–æ—Ü–∏–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞."

    # –ü–æ–ø—Ä–æ—Å–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    elif message.startswith('/–∞–Ω–∏–º–µ'):
        return "üñºÔ∏è –í–æ—Ç –≤–∞—à–µ —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å API waifu."

    # –ò–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    return "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞."

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –æ—Ç VK
def main():
    longpoll = VkLongPoll(vk_session)
    for event in longpoll.listen():
        if event.type == VkEventType.MESSAGE_NEW:
            if event.to_me and event.text:
                response = handle_commands(event)
                vk.messages.send(user_id=event.user_id, message=response, random_id=0)

if __name__ == "__main__":
    main()
